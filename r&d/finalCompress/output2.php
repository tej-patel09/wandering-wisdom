<?php class a{    public $b;  public $c;    private function d()  {  }    function e($b)  {    $this->b = $b;  }  function f()  {    return $this->b;  }}$g = new a();$h = new a();$g->e('Apple');$h->e('Banana');echo "Fruit";echo "name";echo "color";echo "this";echo "$this";echo "->";echo "col          or";echo "                     ";echo "$this";echo "get_name";echo $g->f();echo "<br>";echo $h->f();?><!DOCTYPE html><html><head> <style> h1 { color: green; } </style></head><body> <center> <h1>Welcome To GFG</h1>  <p> <?php       echo "Complete                                     <strong>Portal</strong> for Geeks."      ?> <br><br> <?php       echo 'Explore, <?php ?> <!-- -->learn and grow.';      echo 'Explore,                                                                                           learn and grow.';      echo 'Explore, learn and grow.';      echo 'Explore, learn and grow.';      echo 'Explore, learn and grow.';      echo 'Explore, learn and grow.';      echo 'Explore, learn and grow.';      echo 'Explore, learn and grow.';      echo 'Explore, learn and grow.';      echo 'Explore, learn and grow.';      echo 'Explore, learn and grow.'; ?> </p> </center></body></html><?php class i{  public $j = 'tesseract';  public $k = true;  public $l = true;  public $m = array();  public $n;  public $o;  public $p;  public $q;  public $r;  private $s;  public function d($q = null, $s = null)  {    $this->q = $q;    $this->s = $s;  }  public function t()  {    return "$this";  }  public function u()  {    $v = array();    if ($this->p) $v[] = "OMP_THREAD_LIMIT={$this->p}";    $v[] = self::w($this->j);    $v[] = $this->k ? self::w($this->q) : "-";    $v[] = $this->l ? self::w($this->x(false)) : "-";    $y = $this->z();    foreach ($this->m as $aa) {      $v[] = is_callable($aa) ? $aa($y) : "$aa";    }    if ($this->n) $v[] = $this->n;    return join(' ', $v);  }  public function x($ab = true)  {    if (!$this->s)      $this->s = $this->ac()        . DIRECTORY_SEPARATOR        . basename(tempnam($this->ac(), 'ocr'));    if (!$ab) return $this->s;    $ad = array('hocr', 'tsv', 'pdf');    $ae = in_array($this->n, $ad) ? $this->n : 'txt';    return "{$this->s}.{$ae}";  }  public function ac()  {    return $this->o ?: sys_get_temp_dir();  }  public function z()  {    exec(self::w($this->j) . ' --version 2>&1', $af);    $ag = explode(' ', $af[0]);    return $ag[1];  }  public function ah()  {    exec(self::w($this->j) . ' --list-langs 2>&1', $af);    array_shift($af);    sort($af);    return $af;  }  public static function w($ai)  {    $aj = strtoupper(substr(PHP_OS, 0, 3)) == 'WIN' ? '$"`' : '$"\\`';    return '"' . addcslashes($ai, $aj) . '"';  }}$v = new i();?>